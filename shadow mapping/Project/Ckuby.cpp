// Ckuby.cpp: файл реализации
//

#include "stdafx.h"
#include "MFC_SDI.h"
#include "Ckuby.h"


// Ckuby

IMPLEMENT_DYNAMIC(Ckuby, CWnd)

Ckuby::Ckuby()
{

}

Ckuby::~Ckuby()
{
}


BEGIN_MESSAGE_MAP(Ckuby, CWnd)
END_MESSAGE_MAP()



// обработчики сообщений Ckuby




void Ckuby::cuby()
{
	float v[8][4] =                                    // координиты вершин куба
	{ -1., 1.,-1.,0.,                           // четыре точки задней грани
		1., 1.,-1,0.,
		1.,-1.,-1.,0.,
		-1.,-1.,-1.,0.,
		-1., 1., 1., 0.,                           // четыре фронтальные точки
		-1.,-1., 1.,0.,
		1.,-1., 1.,0.,
		1., 1., 1.,0., };
	float norm[6][4] =                       // 6 нормалей дл€ шести граней куба
	{ 0., 0.,-1.,0.,                 // задн€€
		0., 0., 1.,0.,                   // передн€€
		-1., 0., 0.,0.,                 // лева€
		1., 0., 0.,0.,                  // права€
		0., 1., 0.,0.,                 // верхн€€
		0.,-1., 0.,0. };              // нижн€€
	GLuint id[6][4] =                                   // индексы вершин граней
	{ 0,1,2,3,               // задн€€
		4,5,6,7,                // передн€€
		0,3,5,4,               // лева€
		7,6,2,1,               // права€
		0,4,7,1,              // верхн€€
		5,3,2,6 };           // нижн€€
							 // рисуем грани:
	glBegin(GL_QUADS);
	for (int i = 0; i<6; i++)
	{
		glNormal3fv(norm[i]);	// определение вектора нормали грани
		for (int j = 0; j<4; j++)
			glVertex3fv(v[id[i][j]]);
	}
	glEnd();

}
